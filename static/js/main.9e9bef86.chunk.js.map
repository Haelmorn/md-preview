{"version":3,"sources":["navbar.js","preview.js","textfield.js","sample.js","App.js","Providers.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","MenuIcon","marginLeft","title","margin","icon","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","concat","easeOut","enteringScreen","hide","display","drawer","flexShrink","drawerPaper","drawerHeader","_objectSpread","alignItems","padding","mixins","toolbar","justifyContent","li","Navbar","props","useTheme","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","classes","react_default","a","createElement","id","AppBar","position","style","background","Toolbar","className","Polymer_default","Typography","variant","Button","color","onClick","Menu_default","Drawer","anchor","paper","IconButton","direction","ChevronRight_default","ChevronLeft_default","Divider","List","map","text","index","ListItem","ListItemText","primary","dangerouslySetInnerHTML","__html","marked","secondary","card","minWidth","setOptions","breaks","highlight","code","hljs","highlightAuto","value","gfm","tables","langPrefix","Preview","content","markdown","safe_content","DOMpurify","sanitize","Card","CardContent","Textfield","react_textarea_autosize_esm_browser","onChange","handleChange","onFocus","resetPlaceholder","onBlur","setPlaceholder","sample","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","event","target","setState","navbar","Grid","container","item","xs","textfield","preview","Component","withStyles","height","overflowY","createMuiTheme","Providers","MuiThemeProvider","src_App","Boolean","window","location","hostname","match","ReactDOM","render","src_Providers","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"g9BAkBA,IAEMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,SAAU,CACRC,WAAYP,EAAMK,QAAQ,IAE5BG,MAAO,CACLN,SAAU,EACVO,OAAQT,EAAMK,QAAQ,IAExBK,KAAM,CACJH,WAAYP,EAAMK,QAAQ,IAE5BM,OAAQ,CACNC,WAAYZ,EAAMa,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQf,EAAMa,YAAYE,OAAOC,MACjCC,SAAUjB,EAAMa,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAK,eAAAC,OA1BW,IA0BX,OACLd,WA3BgB,IA4BhBK,WAAYZ,EAAMa,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQf,EAAMa,YAAYE,OAAOO,QACjCL,SAAUjB,EAAMa,YAAYI,SAASM,kBAGzCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNN,MArCgB,IAsChBO,WAAY,GAEdC,YAAa,CACXR,MAzCgB,KA2ClBS,aAAYC,EAAA,CACVL,QAAS,OACTM,WAAY,SACZC,QAAS,SACNhC,EAAMiC,OAAOC,QAJN,CAKVC,eAAgB,aAElBC,GAAI,CACF3B,OAAQT,EAAMK,QAAQ,OAgFXgC,MA5Ef,SAAgBC,GACd,IAAMtC,EAAQuC,cADOC,EAEGC,IAAMC,UAAS,GAFlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEdM,EAFcH,EAAA,GAERI,EAFQJ,EAAA,GAYfK,EAAUlD,IAChB,OACEmD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACRH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,WAAY,YAC3CP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,UAAWV,EAAQtC,MAC5BuC,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,MACED,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWV,EAAQxC,OAA5C,sBAGAyC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAjBhC,WACEjB,GAAQ,KAgBF,sBAEEE,EAAAC,EAAAC,cAACc,EAAAf,EAAD,SAIND,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACER,UAAWV,EAAQtB,OACnBmC,QAAQ,aACRM,OAAO,QACPrB,KAAMA,EACNE,QAAS,CACPoB,MAAOpB,EAAQpB,cAGjBqB,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQnB,cACtBoB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYC,QAAQ,QAAQ9B,WAAW,UAAvC,gBAA6DkB,EAAAC,EAAAC,cAAA,WAA7D,SACAF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYL,QA9BpB,WACEjB,GAAQ,KA8BqB,QAApB/C,EAAMsE,UAAsBrB,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,MAAuBD,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,QAGxDD,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACAxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACG,CAAC,OAAQ,QAAS,SAAU,UAAW,WAAY,aAAaC,IAAI,SAACC,EAAMC,GAAP,OACnE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACE7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAcC,QAASJ,IACvB3B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAcC,QAAS/B,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cAAc6B,wBAAyB,CAACC,OAAQC,IAAOP,YAI5F3B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACAxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACG,CAAC,8CACF,yDACA,0DACA,oDAAoDC,IAAI,SAACC,EAAMC,GAAP,OACtD5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACE7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAcC,QAASJ,EAAMQ,UAAWnC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YAAY6B,wBAAyB,CAACC,OAAQC,IAAOP,YAI3G3B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACAxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACG,CAAC,qDACF,uFAAuFC,IAAI,SAACC,EAAMC,GAAP,OACzF5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACE7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAcC,QAASJ,EAAMQ,UAAWnC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YAAY6B,wBAAyB,CAACC,OAAQC,IAAOP,mECnI7G9E,EAAYC,YAAW,CAC3BsF,KAAM,CACJC,SAAU,OAIdH,IAAOI,WAAW,CAChBC,QAAQ,EACRC,UAAW,SAASC,GAClB,OAAOC,IAAKC,cAAcF,GAAMG,OAElCC,KAAK,EACLC,QAAQ,EACRC,WAAY,KAoBCC,MAhBf,SAAiB3D,GACf,IAAMU,EAAUlD,IACVoG,EAAUf,IAAO7C,EAAM6D,UACvBC,EAAeC,IAAUC,SAASJ,GACxC,OACEjD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAM7C,UAAWV,EAAQqC,KAAMjC,GAAG,gBAChCH,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACAvD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYF,UAAWV,EAAQxC,MAAOuD,MAAM,iBAA5C,WAGEd,EAAAC,EAAAC,cAAA,OAAK8B,wBAAyB,CAACC,OAAQkB,gBC5BzCtG,EAAYC,YAAW,CAC3BsF,KAAM,CACJC,SAAU,OA2BCmB,MAtBf,SAAmBnE,GACjB,IAAMU,EAAUlD,IAChB,OACEmD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eACRH,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAM7C,UAAWV,EAAQqC,KAAMjC,GAAG,iBAChCH,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACAvD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYF,UAAWV,EAAQxC,MAAOuD,MAAM,iBAA5C,YAGId,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACAb,MAAOvD,EAAM6D,SACbQ,SAAUrE,EAAMsE,aAChBC,QAASvE,EAAMwE,iBACfC,OAAQzE,EAAM0E,yCCiCTC,GA7DH,++ECkBNC,eAEJ,SAAAA,EAAY5E,GAAO,IAAA6E,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAH,IACjBC,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAsE,GAAAM,KAAAH,KAAM/E,KACDmF,MAAQ,CACXtB,SAAUc,IAEZE,EAAKP,aAAeO,EAAKP,aAAac,KAAlB9E,OAAA+E,EAAA,EAAA/E,CAAAuE,IACpBA,EAAKL,iBAAmBK,EAAKL,iBAAiBY,KAAtB9E,OAAA+E,EAAA,EAAA/E,CAAAuE,IACxBA,EAAKH,eAAiBG,EAAKH,eAAeU,KAApB9E,OAAA+E,EAAA,EAAA/E,CAAAuE,IAPLA,gFASFS,GACXA,EAAMC,OAAOhC,OAASoB,IACxBI,KAAKS,SAAS,CAAC3B,SAAU,4CAGdyB,GACa,IAAtBA,EAAMC,OAAOhC,OACfwB,KAAKS,SAAS,CAAC3B,SAAUc,0CAGhBW,GACXP,KAAKS,SAAS,CAAC3B,SAAUyB,EAAMC,OAAOhC,yCAKtC,OACE5C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4E,EAAD,MACF9E,EAAAC,EAAAC,cAAC6E,GAAA,EAAD,CAAMC,WAAS,EAAC5H,QAAS,GACvB4C,EAAAC,EAAAC,cAAC6E,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACblF,EAAAC,EAAAC,cAACiF,EAAD,CAAWxB,aAAcS,KAAKT,aAAcT,SAAUkB,KAAKI,MAAMtB,SAAUW,iBAAkBO,KAAKP,iBAAkBE,eAAgBK,KAAKL,kBAE3I/D,EAAAC,EAAAC,cAAC6E,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACblF,EAAAC,EAAAC,cAACkF,EAAD,CAASlC,SAAUkB,KAAKI,MAAMtB,qBAnCtBmC,aA2CHC,gBArDA,SAAAvI,GAAK,MAAK,CACvBC,KAAM,CACJQ,OAAQ,OACR+H,OAAQ,IACRpH,MAAO,IACPY,QAAS,SACTyG,UAAW,YA+CAF,CAAmBrB,ICzD5BlH,GAAQ0I,cAUCC,OARf,WACE,OACE1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAkB5I,MAAOA,IACvBiD,EAAAC,EAAAC,cAAC0F,GAAD,QCGcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnG,EAAAC,EAAAC,cAACkG,GAAD,MAAeC,SAASC,eAAe,SD2HjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9e9bef86.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Polymer from '@material-ui/icons/Polymer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport marked from 'marked';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  MenuIcon: {\n    marginLeft: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    margin: theme.spacing(2),\n  },\n  icon: {\n    marginLeft: theme.spacing(1),\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  li: {\n    margin: theme.spacing(0),\n  }\n}));\n\nfunction Navbar(props) {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  const classes = useStyles();\n  return (\n    <div id='navbar'>\n    <AppBar position=\"static\" style={{ background: '#13293d' }}>\n        <Toolbar className={classes.icon}>\n        <Polymer />\n          <Typography variant=\"h4\" className={classes.title}>\n          Markdown Previewer\n          </Typography>\n          <Button color=\"inherit\" onClick={handleDrawerOpen}>\n            Markdown cheatsheet\n            <MenuIcon />\n            </Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography variant='body1' alignItems='center'>Md reference <br />/WIP/</Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['# H1', '## H2', '### H3', '#### H4', '##### H5', '###### H6'].map((text, index) => (\n            <ListItem>\n              <ListItemText primary={text} />\n              <ListItemText primary={<div id='header-item' dangerouslySetInnerHTML={{__html: marked(text)}} />} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['Emphasis with *asterisks* or _underscores_.',\n          'Strong emphasis with **asterisks** or __underscores__.',\n          'Combined emphasis with **asterisks and _underscores_**.',\n          'Strikethrough uses two tildes. ~~Scratch this.~~'].map((text, index) => (\n            <ListItem>\n              <ListItemText primary={text} secondary={<div id='list-item' dangerouslySetInnerHTML={{__html: marked(text)}} />} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['[I\\'m an inline-style link](https://www.google.com)',\n          '[I\\'m an inline-style link with title](https://www.google.com \"Google\\'s Homepage\")'].map((text, index) => (\n            <ListItem>\n              <ListItemText primary={text} secondary={<div id='list-item' dangerouslySetInnerHTML={{__html: marked(text)}} />} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  )\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport marked from 'marked';\nimport DOMpurify from 'dompurify';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport hljs from 'highlight.js';\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n  }\n});\n\nmarked.setOptions({\n  breaks: true,\n  highlight: function(code) {\n    return hljs.highlightAuto(code).value;\n  },\n  gfm: true, \n  tables: true,\n  langPrefix: \"\",\n});\n\n\nfunction Preview(props) {\n  const classes = useStyles();\n  const content = marked(props.markdown);\n  const safe_content = DOMpurify.sanitize(content)\n  return (\n    <Card className={classes.card} id='preview-card'>\n      <CardContent>\n      <Typography className={classes.title} color=\"textSecondary\">\n          Preview\n        </Typography>\n        <div dangerouslySetInnerHTML={{__html: safe_content}} />\n      </CardContent>\n    </Card>\n  )\n};\n\nexport default Preview;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from 'react-textarea-autosize';\n\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n  }\n});\n\n\nfunction Textfield(props) {\n  const classes = useStyles();\n  return (\n    <div id='input-field'>\n    <Card className={classes.card} id='markdown-card'>\n      <CardContent>\n      <Typography className={classes.title} color=\"textSecondary\">\n          Markdown\n        </Typography>\n          <TextareaAutosize\n          value={props.markdown} \n          onChange={props.handleChange}\n          onFocus={props.resetPlaceholder}\n          onBlur={props.setPlaceholder}\n          >\n          </TextareaAutosize>\n      </CardContent>\n    </Card>\n    </div>\n  )\n};\n\nexport default Textfield;\n","const sample = `# <a name=\"top\"></a>Markdown Test Page\n\n* [Headings](#Headings)\n* [Paragraphs](#Paragraphs)\n* [Blockquotes](#Blockquotes)\n* [Lists](#Lists)\n* [Horizontal rule](#Horizontal)\n* [Table](#Table)\n* [Code](#Code)\n* [Inline elements](#Inline)\n\n***\n\n# <a name=\"Headings\"></a>Headings\n\n# Heading one\n\nSint sit cillum pariatur eiusmod nulla pariatur ipsum. Sit laborum anim qui mollit tempor pariatur nisi minim dolor. Aliquip et adipisicing sit sit fugiat commodo id sunt. Nostrud enim ad commodo incididunt cupidatat in ullamco ullamco Lorem cupidatat velit enim et Lorem. Ut laborum cillum laboris fugiat culpa sint irure do reprehenderit culpa occaecat. Exercitation esse mollit tempor magna aliqua in occaecat aliquip veniam reprehenderit nisi dolor in laboris dolore velit.\n\n## Heading two\n\nAute officia nulla deserunt do deserunt cillum velit magna. Officia veniam culpa anim minim dolore labore pariatur voluptate id ad est duis quis velit dolor pariatur enim. Incididunt enim excepteur do veniam consequat culpa do voluptate dolor fugiat ad adipisicing sit. Labore officia est adipisicing dolore proident eiusmod exercitation deserunt ullamco anim do occaecat velit. Elit dolor consectetur proident sunt aliquip est do tempor quis aliqua culpa aute. Duis in tempor exercitation pariatur et adipisicing mollit irure tempor ut enim esse commodo laboris proident. Do excepteur laborum anim esse aliquip eu sit id Lorem incididunt elit irure ea nulla dolor et. Nulla amet fugiat qui minim deserunt enim eu cupidatat aute officia do velit ea reprehenderit.\n\n> Ipsum et cupidatat mollit exercitation enim duis sunt irure aliqua reprehenderit mollit. Pariatur Lorem pariatur laboris do culpa do elit irure. Eiusmod amet nulla voluptate velit culpa et aliqua ad reprehenderit sit ut.\n\n\n### Ordered List\n\n1. Longan\n2. Lychee\n3. Excepteur ad cupidatat do elit laborum amet cillum reprehenderit consequat quis.\n    Deserunt officia esse aliquip consectetur duis ut labore laborum commodo aliquip aliquip velit pariatur dolore.\n4. Marionberry\n5. Melon\n    - Cantaloupe\n    - Honeydew\n    - Watermelon\n6. Miracle fruit\n7. Mulberry\n\n\n\\`\\`\\`go\npackage main\n\nimport (\n    \"fmt\"\n    \"net/http\"\n)\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n    fmt.Fprintf(w, \"Hi there, I love %s!\", r.URL.Path[1:])\n}\n\nfunc main() {\n    http.HandleFunc(\"/\", handler)\n    http.ListenAndServe(\":8080\", nil)\n}\n\\`\\`\\`\n[![Manny Pacquiao](https://img.youtube.com/vi/s6bCmZmy9aQ/0.jpg)](https://youtu.be/s6bCmZmy9aQ)\n`\n\nexport default sample;\n","import Navbar from './navbar'\nimport Preview from './preview';\nimport Textfield from './textfield'\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport sample from './sample'\n\nconst styles = theme => ({\n  root: {\n    margin: '10px',\n    height: 400,\n    width: 300,\n    padding: '0 30px',\n    overflowY: 'scroll',\n  },\n});\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      markdown: sample\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.resetPlaceholder = this.resetPlaceholder.bind(this);\n    this.setPlaceholder = this.setPlaceholder.bind(this);\n  }\n  resetPlaceholder(event) {\n    if (event.target.value == sample) {\n      this.setState({markdown: \"\"})\n    }\n  }\n  setPlaceholder(event) {\n    if (event.target.value == \"\"){\n      this.setState({markdown: sample})\n    }\n  }\n  handleChange(event) {\n    this.setState({markdown: event.target.value});\n  }\n\n\n  render () {\n    return (\n      <div>\n        <Navbar />\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <Textfield handleChange={this.handleChange} markdown={this.state.markdown} resetPlaceholder={this.resetPlaceholder} setPlaceholder={this.setPlaceholder} />\n        </Grid>\n        <Grid item xs={6}>\n          <Preview markdown={this.state.markdown} />\n        </Grid>\n      </Grid>\n      </div>  \n    );\n  }\n}\n\nexport default withStyles(styles)(App);","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport App from './App'\n\nconst theme = createMuiTheme();\n\nfunction Providers() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  );\n}\n\nexport default Providers;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Providers from './Providers';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Providers />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}